---

- name: Load variables based on OS type
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "family-{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - "family-{{ ansible_os_family }}.yml"
        - default.yml
      paths:
        - 'vars'

- block:

    - name: Get slurm version (Debian)  # noqa no-changed-when
      shell: |
        set -o pipefail
        apt show slurmd 2>/dev/null | awk '/Version:/ {print $2}' | cut -f1-2 -d.
      args:
        executable: /bin/bash
      changed_when: false
      register: _slurm_version

    - name: Save slurm version
      set_fact:
        slurm_version: "{{ _slurm_version.stdout }}"

  when: ansible_os_family == 'Debian'

- block:

    - name: Get slurm version (RedHat)  # noqa no-changed-when
      shell: |
        set -o pipefail
        dnf info slurm | awk '/^Version/ {print $NF}' | cut -f1-2 -d.
      args:
        executable: /bin/bash
      changed_when: false
      register: _slurm_version

    - name: Save slurm version
      set_fact:
        slurm_version: "{{ _slurm_version.stdout }}"

  when: ansible_os_family == 'RedHat'

- name: Configless configuration is available from 20.02
  set_fact:
    slurm_configless: >-
      {{ true if (slurm_configless == 'auto' and slurm_version is version('20.02', '>=')) else (slurm_configless|bool) }}

- name: Add slurm roles based on groups
  set_fact:
    slurm_roles: "{{ slurm_roles + [ item.role ] }}"
  loop: "{{ slurm_group2role_mapping }}"
  when:
    - slurm_role is undefined
    - item.group in group_names

- name: Convert slurm_roles from string to list
  set_fact:
    slurm_roles: "{{ [ slurm_role ] }}"
  when: slurm_role is defined

- name: Get slurm db ip
  set_fact:
    slurm_db_ip: "{{ lookup('dig', slurm_db_host) }}"
  when: slurm_db_ip is undefined

- name: Get slurm master ip
  set_fact:
    slurm_master_ip: "{{ lookup('dig', slurm_master_name) }}"
  when: slurm_master_ip is undefined

- name: Show settings
  debug:
    msg:
      slurm:
        version: "{{ slurm_version }}"
        configless: "{{ slurm_configless }}"
        roles: "{{ slurm_roles }}"
        master_ip: "{{ slurm_master_ip }}"
        db_ip: "{{ slurm_db_ip }}"



- name: Add specific repositories
  include_tasks: pre-install.yml

- name: Install slurmdbd
  block:
    - include_tasks: users.yml
    - include_tasks: install.yml
    - include_tasks: config.yml
  vars:
    slurm_role: slurmdbd
  when: "'slurmdbd' in slurm_roles"

- name: Install slurmctld
  block:
    - include_tasks: users.yml
    - include_tasks: install.yml
    - include_tasks: config.yml
  vars:
    slurm_role: slurmctld
  when: "'slurmctld' in slurm_roles"

- name: Install slurmctld
  block:
    - include_tasks: users.yml
    - include_tasks: install.yml
    - include_tasks: config.yml
  vars:
    slurm_role: slurmd
  when: "'slurmd' in slurm_roles"

- name: Install slurm (client)
  block:
    - include_tasks: users.yml
    - include_tasks: install.yml
  vars:
    slurm_role: client
  when: "'client' in slurm_roles"
