---

- name: Create directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ slurm_user }}"
    group: "{{ slurm_group }}"
    mode: "{{ item.mode | default('0755') }}"
  loop: "{{ slurm_dirs['slurmd'] }}"

- name: Get slurm version
  command: slurmd -V
  changed_when: false
  register: _slurm_version

- name: Configless configuration is availabe from 20.02
  set_fact:
    slurm_configless: true
  when: _slurm_version.stdout.split(' ')[1] is version('20.02', '>=')

- name: Get slurm master ip
  set_fact:
    slurm_master_ip: "{{ lookup('dig', slurm_master_name) }}"
  when: slurm_master_ip is undefined

- block:

    - name: Configure slurm to retrieve config from master
      lineinfile:
        line: SLURMD_OPTIONS='--conf-server {{ slurm_master_name }}:{{ slurm_slurmctld_port }}'
        path: /etc/{{ 'sysconfig' if ansible_os_family == 'RedHat' else 'default' }}/slurmd
        create: yes
      notify: Restart slurmd

    - name: Delete obsolete configuratuion files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ slurm_conf_dir }}/slurm.conf"
        - "{{ slurm_conf_dir }}/cgroup.conf"
      notify: Restart slurmd

  when: slurm_configless|bool


- block:

    - name: Distribute {{ slurm_conf_dir }}/slurm.conf
      template:
        src: slurm.conf.j2
        dest: "{{ slurm_conf_dir }}/slurm.conf"
        owner: "{{ slurm_user }}"
        group: "{{ slurm_group }}"
        mode: '0644'
      notify: Restart slurmd

    - name: Distribute {{ slurm_conf_dir }}/cgroup.conf
      template:
        src: cgroup.conf.j2
        dest: "{{ slurm_conf_dir }}/cgroup.conf"
        owner: "{{ slurm_user }}"
        group: "{{ slurm_group }}"
        mode: '0600'
      notify: Restart slurmd

  when: not slurm_configless|bool

- name: Enable slurmd
  service:
    name: 'slurmd'
    enabled: yes
    state: started


# ------------------------------------------------------
# Firewall
# ------------------------------------------------------

- name: Open firewall ports (Debian)
  ufw:
    rule: allow
    port: "{{ (item.port|regex_replace('-',':')) if item.port is defined else omit }}"
    proto: "{{ item.proto if item.proto is defined else omit }}"
    name: "{{ item.service if item.service is defined else omit }}"
    state: enabled
  loop: "{{ slurm_firewall_ports['slurmd'] }}"
  when: ansible_os_family == 'Debian'

- name: Open firewall ports (RedHat)
  firewalld:
    port: "{{ (item.port+'/'+item.proto) if item.port is defined else omit }}"
    service: "{{ item.service if item.service is defined else omit }}"
    immediate: yes
    permanent: yes
    zone: public
    state: enabled
  loop: "{{ slurm_firewall_ports['slurmd'] }}"
  when: ansible_os_family == 'RedHat'
